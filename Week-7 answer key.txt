Week-7


Day-3 INSERT STATEMENT

1) insert into electricity_connection_type values(1,'home');
   insert into electricity_connection_type values(2,'hotel');

2)insert into slab values(1,1,4,6,2.0);
  insert into slab values(2,2,6,9,5.0);
  insert into slab values(3,3,11,15,10.0);

3)insert into building_type values(1,'Vinay',1);
insert into building_type values(2,'Ram',2);
insert into building_type values(3,'Kalai',3);
insert into building_type values(4,'Nithya',4);
insert into building_type values(5,'King',5);

4)insert into building values
(1,'Robozz','lti',1,7888987879,'lti@gmail.com'),
(2,'Vinay','lti',2,7658987868,'lti@gmail.com'),
(3,'Benny','lti',1,7458987857,'lti@gmail.com'),
(4,'Beeshma','lti',2,7813987846,'lti@gmail.com'),
(5,'Ramaya','lti',5,7856387835,'lti@gmail.com');



Day-3 UPDATE STATEMENT

1)update slab set from_unit=1 where from_unit=0;

2)update building_type set name='Mall' where name='Shopping Mall';

3)update building set owner_name='Aiden' where owner_name='Haidil';

Day-3 DELETE STATEMENT

1)truncate slab;

2)delete from building_type where connection_type_id=1;

3)delete from building where owner_name='Muhammad Hafaz';



Day-3 Filtering Your results

1)select * from building where owner_name='Nicholas'

2)select * from bill where total_units>10000 order by total_units desc;

3)select * from bill where due_date='2017-10-01' order by payable_amount desc;

4)select * from bill where year(payment_date)=2018 order by payable_amount desc;

5)select owner_name, address,contact_number from building where email_address is null order by owner_name;

6)select * from building where building_type_id=2 order by owner_name;

7)select * from electricity_reading where total_units between 500 and 1000 order by total_units;

8)select * from bill where is_payed=0 order by due_date;

9)select meter_id,total_units from electricity_reading where h13<h14 order by total_units desc;

10)select * from meter where meter_number like 's%6';

11)select name from building_type where name like '%l' order by name;

12)select * from building where owner_name like '%di%' order by owner_name;

13)select * from bill where day(payment_date)=02 order by total_units desc;

14)select due_date,payable_amount from bill where payment_date not between '2017-09-10' and '2017-10-10';

15)select due_date,payment_date,DATEDIFF(due_date,payment_date) as date_difference,payable_amount from bill where payment_date < due_date;



Day-3 Common aggregate function

1)select avg(total_units) as average_units_of_electricity from electricity_reading;

2)select avg(payable_amount) as average_payable_amount from bill where payable_amount>10000;

3)select sum(payable_amount) as sum_payable_amount from bill;

4)select sum(payable_amount) as sum_payable_amount from bill where due_date='2017-10-01';

5)select min(total_units) as min_total_units from electricity_reading;

6)select avg(h8) as average_8th_hour_consumption from electricity_reading;

7)select sum(payable_amount+fine_amount) as sum_payable_and_fine_amount from bill

8)select sum(h12) as sum_12th_hour_consumption from electricity_reading

9)select sum(payable_amount) as sum_payable_amount from bill where year(payment_date)=2018


Day-3 Inner joins

2)select r.route_name from route r
inner join station_route sr on r.id=sr.route_id
inner join station s on s.id=sr.station_id
where s.name='Woodlands MRT station'order by r.route_name;

3)select tc.person_name,tc.contact_number,tc.balance,tp.entry_time,tp.exit_time
from travel_card tc
inner join travel_payment tp on tc.id=tp.travel_card_id
inner join station s on s.id=tp.entry_station_id
where s.name='Sengkang MRT station' order by tc.person_name asc;

4)select tc.* ,  tp.*
from travel_card tc
inner join travel_payment tp on tp.travel_card_id=tc.id
where date(tp.exit_time)='2017-12-21' and tp.amount>25 
order by tc.person_name asc;

6)select mt.position , mt.updated_time , mt.forward , ts.scheduled_time , ta.actual_time
from metro_train mt 
inner join train_schedule ts on mt.id=ts.metro_train_id
inner join train_arrival_time ta on mt.id=ta.metro_train_id
inner join route r on r.id=mt.route_id
where r.route_name= 'North South line' or r.route_name= 'Circle line'
order by mt.position asc, mt.updated_time asc ;

7)select tc.person_name,tc.contact_number
from travel_card tc 
inner join travel_payment tp on tc.id=tp.travel_card_id
inner join station s on tp.exit_station_id=s.id
inner join station_route sr on s.id=sr.station_id
inner join route r on sr.route_id=r.id
where r.route_name='North East line' and tp.amount>25
order by tc.person_name asc;


8)select s.name,s.locality from station s
inner join train_schedule ts on s.id=ts.station_id
inner join station_route sr on s.id=sr.station_id
inner join route r on sr.route_id=r.id
where date(ts.scheduled_time)='2017-12-21' and r.route_name='Circle line'
order by s.name asc;


9)select tc.person_name,tc.contact_number,tc.balance,tp.entry_time,tp.exit_time
from travel_card tc
inner join travel_payment tp on tc.id = tp.travel_card_id
where tc.balance=(select max(balance) from travel_card 
                  where balance<(select max(balance) from travel_card ))
                  order by tc.person_name asc;


10)SELECT tc.person_name, tc.contact_number, tc.balance
FROM travel_card tc
INNER JOIN travel_payment tp ON tc.id = tp.travel_card_id
GROUP BY tc.person_name, tc.contact_number, tc.balance
HAVING COUNT(*) = ( SELECT MAX(travel_count)
FROM (  SELECT COUNT(*) AS travel_count FROM travel_payment group by travel_card_id)as travel_max_count) 
ORDER BY tc.person_name DESC;